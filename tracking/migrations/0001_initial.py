# Generated by Django 4.2.23 on 2025-07-10 12:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Points',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_type', models.CharField(choices=[('quiz_completion', 'Quiz Completion'), ('streak_bonus', 'Streak Bonus'), ('perfect_score', 'Perfect Score'), ('daily_login', 'Daily Login'), ('achievement', 'Achievement')], max_length=20)),
                ('points_earned', models.IntegerField()),
                ('description', models.CharField(max_length=200)),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='points', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'points',
                'ordering': ['-earned_at'],
            },
        ),
        migrations.CreateModel(
            name='MoodEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mood_level', models.IntegerField(choices=[(1, 'Very Sad'), (2, 'Sad'), (3, 'Neutral'), (4, 'Happy'), (5, 'Very Happy')])),
                ('notes', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mood_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'mood_entries',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_level', models.IntegerField(default=1)),
                ('current_xp', models.IntegerField(default=0)),
                ('xp_to_next_level', models.IntegerField(default=100)),
                ('total_xp_earned', models.IntegerField(default=0)),
                ('last_level_up', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levels', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'levels',
            },
        ),
        migrations.CreateModel(
            name='LearningSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.IntegerField(blank=True, help_text='Duration in minutes', null=True)),
                ('quizzes_taken', models.IntegerField(default=0)),
                ('points_earned', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'learning_sessions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='LearningProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_quizzes_taken', models.IntegerField(default=0)),
                ('total_quizzes_passed', models.IntegerField(default=0)),
                ('average_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('total_time_spent', models.IntegerField(default=0, help_text='Total time spent learning in minutes')),
                ('current_streak', models.IntegerField(default=0, help_text='Current learning streak in days')),
                ('longest_streak', models.IntegerField(default=0, help_text='Longest learning streak in days')),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Learning Progress',
                'db_table': 'learning_progress',
            },
        ),
        migrations.CreateModel(
            name='DailyGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('quizzes_target', models.IntegerField(default=1)),
                ('quizzes_completed', models.IntegerField(default=0)),
                ('time_target', models.IntegerField(default=30, help_text='Target time in minutes')),
                ('time_spent', models.IntegerField(default=0, help_text='Time spent in minutes')),
                ('is_completed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_goals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'daily_goals',
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_type', models.CharField(choices=[('quiz_master', 'Quiz Master'), ('streak_king', 'Streak King'), ('speed_demon', 'Speed Demon'), ('perfect_score', 'Perfect Score'), ('early_bird', 'Early Bird'), ('night_owl', 'Night Owl')], max_length=20)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.CharField(help_text='Icon identifier for the achievement', max_length=50)),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'achievements',
                'unique_together': {('user', 'achievement_type')},
            },
        ),
    ]
